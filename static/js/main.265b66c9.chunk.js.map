{"version":3,"sources":["todolist/TodolistItem.tsx","todolist/Todolist.tsx","todolist/TodoInsert.tsx","todolist/TodoHeader.tsx","features/index.tsx","todolist/Todo.tsx","hooks/useWindowSize.tsx","App.tsx","index.tsx"],"names":["React","memo","todos","onDeleteHandler","onCheckToggleHandler","onEditHandler","useState","toggle","setToggle","text","edit","setEdit","theme","useTheme","content_wrapper","css","display","flexDirection","justifyContent","alignItems","padding","marginTop","marginBottom","border","borderRadius","backgroundColor","nthBg","content__input__change_false","color","inputText","inputBorder","inputBackgroundColor","content__button__change_false","width","height","boxSizing","background","marginRight","onClick","id","checked","Fragment","content__button__change_true","content__text__change_true","onChange","e","target","value","content__button__toggle","todoId","textDecoration","marginLeft","todo","map","key","onSubmitHandler","todoInput","onChangeInput","content__button_confirm","buttonBg","buttonBorder","transitionDuration","transitionProperty","cursor","buttonBgHover","buttonTextHover","content_wrapper__form","content_wrapper__input","paddingLeft","fontSize","onSubmit","onSearchHandler","undoneTasks","filter","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","header__main_title","headerMainTitleText","textAlign","header__sub_title","headerSubTitleText","header__content","header__input","placeholder","length","initialState","combineReducers","todosReducer","list","JSON","parse","localStorage","getItem","addTodos","createAction","toggleTodos","removeTodos","editTodos","todoSlice","createSlice","name","reducers","add","payload","newTodo","Math","random","toString","substring","trim","push","setItem","stringify","targetIndex","findIndex","item","remove","splice","selectTodoList","createSelector","state","actions","rootReducer","reducer","console","log","Todo","isDark","setDark","dispatch","useDispatch","todoList","useSelector","setTodoInput","setTodo","keyword","setKeyword","footerHeight","setFooterHeight","size","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","containerDiv","document","getElementById","clientHeight","useCallback","preventDefault","alert","editedText","debounceHandler","debounce","evt","container","wrapper","maxWidth","paddingRight","content","overflowY","footer","indexOf","themeLight","buttonText","headerContentText","themeDark","App","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.265b66c9.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\nimport { Todos } from \"../features\";\r\n\r\n// interface Todo {\r\n//   id: string;\r\n//   text: string;\r\n//   checked: Boolean;\r\n// }\r\ninterface TodolistItemProps {\r\n  todos: Todos;\r\n  onDeleteHandler(todoId: string): void;\r\n  onCheckToggleHandler(todoId: string): void;\r\n  onEditHandler(todoId: string, editedText: string): void;\r\n}\r\n\r\nconst TodolistItem: React.FC<TodolistItemProps> = ({\r\n  todos,\r\n  onDeleteHandler,\r\n  onCheckToggleHandler,\r\n  onEditHandler,\r\n}) => {\r\n  const [toggle, setToggle] = useState<boolean>(true);\r\n  const [edit, setEdit] = useState<string>(todos.text);\r\n\r\n  const onToggleHandler = (todoId: string) => {\r\n    if (!toggle && todos.text !== edit) {\r\n      onEditHandler(todoId, edit);\r\n    }\r\n    setToggle(!toggle);\r\n  };\r\n\r\n  const onChangeText = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEdit(e.target.value);\r\n  };\r\n\r\n  const onChangeHandler = () => {\r\n    if (!toggle) {\r\n      return;\r\n    }\r\n    onCheckToggleHandler(todos.id);\r\n  };\r\n\r\n  const theme = useTheme() as any;\r\n\r\n  const content_wrapper = css({\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    border: \"0.3px solid #e6e6e6\",\r\n    borderRadius: 10,\r\n    \"& div\": {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n    },\r\n    \"&:nth-of-type(2n)\": {\r\n      backgroundColor: `${theme.nthBg}`\r\n    }\r\n  });\r\n\r\n  const content__input__change_false = css({\r\n    color: `${theme.inputText}`,\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.inputBackgroundColor}`,\r\n  })\r\n\r\n  const content__button__change_false = css({\r\n    width: 20,\r\n    height: 20,\r\n    boxSizing: \"border-box\",\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.background}`,\r\n    marginRight: 10,\r\n  });\r\n\r\n  return (\r\n    <div css={content_wrapper}>\r\n      <div onClick={onChangeHandler}>\r\n        {todos.checked && toggle ? (\r\n          <React.Fragment>\r\n            <div css={content__button__change_true} />\r\n            <div css={content__text__change_true}>{todos.text}</div>\r\n          </React.Fragment>\r\n        ) : toggle ? (\r\n          <React.Fragment>\r\n            <div css={content__button__change_false} />\r\n            {todos.text}\r\n          </React.Fragment>\r\n        ) : (\r\n          <input css={content__input__change_false} onChange={onChangeText} value={edit} />\r\n        )}\r\n      </div>\r\n      <div css={content__button__toggle}>\r\n        <div onClick={() => onToggleHandler(todos.id)}>\r\n          {toggle ? \"수정\" : \"적용\"}\r\n        </div>\r\n        <div onClick={() => onDeleteHandler(todos.id)}>삭제</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodolistItem);\r\n\r\nconst content__button__change_true = css({\r\n  width: 20,\r\n  height: 20,\r\n  backgroundColor: \"#03DAC5\",\r\n});\r\n\r\nconst content__text__change_true = css({\r\n  textDecoration: \"line-through\",\r\n  marginLeft: 10,\r\n});\r\n\r\nconst content__button__toggle = css({\r\n  \"& div\": {\r\n    marginRight: 20,\r\n  },\r\n});\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport TodolistItem from \"./TodolistItem\";\r\nimport { jsx } from \"@emotion/react\";\r\nimport { Todos } from \"../features\";\r\n\r\n// interface Todo {\r\n//   id: string;\r\n//   text: string;\r\n//   checked: Boolean;\r\n// }\r\ninterface TodolistProps {\r\n  todo: Todos[];\r\n  onDeleteHandler(todoId: string): void;\r\n  onCheckToggleHandler(todoId: string): void;\r\n  onEditHandler(todoId: string, editedText: string): void;\r\n}\r\n\r\nconst Todolist: React.FC<TodolistProps> = ({\r\n  todo,\r\n  onDeleteHandler,\r\n  onCheckToggleHandler,\r\n  onEditHandler,\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      {todo.map((todos: Todos) => (\r\n        <TodolistItem\r\n          key={todos.id}\r\n          todos={todos}\r\n          onDeleteHandler={onDeleteHandler}\r\n          onCheckToggleHandler={onCheckToggleHandler}\r\n          onEditHandler={onEditHandler}\r\n        />\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(Todolist);\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\n\r\ninterface TodoInsertProps {\r\n  onSubmitHandler(e: any): void;\r\n  onChangeInput(e: any): void;\r\n  todoInput: string;\r\n}\r\n\r\nconst TodoInsert: React.FC<TodoInsertProps> = ({\r\n  onSubmitHandler,\r\n  todoInput,\r\n  onChangeInput,\r\n}) => {\r\n  const theme = useTheme() as any;\r\n  \r\n  const content__button_confirm = css({\r\n    width: 70,\r\n    backgroundColor: `${theme.buttonBg}`,\r\n    color: `${theme.text}`,\r\n    border: `1px solid ${theme.buttonBorder}`,\r\n    borderRadius: 4,\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color, background-color\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: `${theme.buttonBgHover}`,\r\n      color: `${theme.buttonTextHover}`,\r\n    },\r\n  });\r\n\r\n  const content_wrapper__form = css({\r\n    display: \"flex\",\r\n    marginBottom: 20,\r\n  });\r\n\r\n  const content_wrapper__input = css({\r\n    color: `${theme.inputText}`,\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.inputBackgroundColor}`,\r\n    width: '100%',\r\n    height: 40,\r\n    paddingLeft: 10,\r\n    fontSize: 20,\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} css={content_wrapper__form}>\r\n      <input\r\n        css={content_wrapper__input}\r\n        onChange={onChangeInput}\r\n        value={todoInput}\r\n      />\r\n      <button css={content__button_confirm}>추가</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoInsert);\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\nimport { Todos } from \"../features\";\r\n// interface Todo {\r\n//   id: string;\r\n//   text: String;\r\n//   checked: Boolean;\r\n// }\r\ninterface TodoHeaderProps {\r\n  todo: Todos[];\r\n  onSearchHandler(e: any): void;\r\n}\r\n\r\nconst TodoHeader: React.FC<TodoHeaderProps> = ({ todo, onSearchHandler }) => {\r\n  const undoneTasks = todo.filter((todos) => !todos.checked);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n  const dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\r\n\r\n  const theme = useTheme() as any;\r\n\r\n  const header__main_title = css({\r\n    color: `${theme.headerMainTitleText}`,\r\n    fontSize: 50,\r\n    textAlign: \"center\",\r\n    \"@media(min-width: 280px)\": {\r\n      fontSize: 30,\r\n    },\r\n    \"@media(min-width: 480px)\": {\r\n      fontSize: 40,\r\n    },\r\n    \"@media(min-width: 768px)\": {\r\n      fontSize: 50,\r\n    },\r\n  });\r\n\r\n  const header__sub_title = css({\r\n    color: `${theme.headerSubTitleText}`,\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color\",\r\n    \"@media(min-width: 280px)\": {\r\n      fontSize: 18,\r\n    },\r\n    \"@media(min-width: 480px)\": {\r\n      fontSize: 24,\r\n    },\r\n    \"@media(min-width: 768px)\": {\r\n      fontSize: 28,\r\n    },\r\n  });\r\n\r\n  const header__content = css({\r\n    color: \"#CF6679\",\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color\",\r\n  });\r\n\r\n  const header__input = css({\r\n    fontSize: 20,\r\n    width: \"100%\",\r\n    height: 40,\r\n    paddingLeft: 10,\r\n    marginBottom: \"0.5rem\",\r\n    color: `${theme.inputText}`,\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.inputBackgroundColor}`,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div css={header__main_title}>TO-DO-LIST</div>\r\n      <h1 css={header__sub_title}>\r\n        {dateString} {dayName}\r\n      </h1>\r\n      <input\r\n        css={header__input}\r\n        onChange={onSearchHandler}\r\n        placeholder=\"할일 검색하기\"\r\n      />\r\n      <h2 css={header__content}>할 일 {undoneTasks.length}개 남음</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoHeader);\r\n","import todosReducer from \"../todolist/Todo\";\r\nimport {\r\n  combineReducers,\r\n  createAction,\r\n  createSelector,\r\n  createSlice,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nexport default combineReducers({\r\n  todos: todosReducer,\r\n});\r\n\r\nexport interface Todos {\r\n  id: string;\r\n  text: string;\r\n  checked: boolean;\r\n}\r\n\r\ninterface TodoList {\r\n  list: Todos[];\r\n}\r\n\r\nconst initialState: TodoList = {\r\n  list: JSON.parse(localStorage.getItem(\"todo\")!) || [], // Non-null assertion operator, ! 는 앞의 값이 확실히 null이나 undefined가 아니라는 걸 알리려고 할 때 쓴다.,\r\n};\r\nconst actionPrefix = \"TODOS\";\r\n\r\nconst addTodos = createAction<object>(`${actionPrefix}/add`);\r\nconst toggleTodos = createAction<object>(`${actionPrefix}/toggle`);\r\nconst removeTodos = createAction<object>(`${actionPrefix}/remove`);\r\nconst editTodos = createAction<object>(`${actionPrefix}/edit`);\r\n\r\nconst todoSlice = createSlice({\r\n  name: actionPrefix,\r\n  initialState,\r\n  reducers: {\r\n    add: ({ list }: TodoList, { payload: { text } }: PayloadAction<Todos>) => {\r\n      const newTodo: Todos = {\r\n        id: Math.random().toString(36).substring(2, 13),\r\n        text: text.toString().trim(),\r\n        checked: false,\r\n      };\r\n      list.push(newTodo);\r\n      localStorage.setItem(\"todo\", JSON.stringify(list));\r\n    },\r\n    toggle: ({ list }: TodoList, { payload: { id } }: PayloadAction<Todos>) => {\r\n      const targetIndex = list.findIndex((item: Todos) => item.id === id);\r\n      list[targetIndex].checked = !list[targetIndex].checked;\r\n      localStorage.setItem(\"todo\", JSON.stringify(list));\r\n    },\r\n    remove: ({ list }: TodoList, { payload: { id } }: PayloadAction<Todos>) => {\r\n      list.splice(\r\n        list.findIndex((todo) => todo.id === id),\r\n        1\r\n      );\r\n      localStorage.setItem(\r\n        \"todo\",\r\n        JSON.stringify(list.filter((item: Todos) => item.id !== id))\r\n      );\r\n    },\r\n    edit: (\r\n      { list }: TodoList,\r\n      { payload: { id, text } }: PayloadAction<Todos>\r\n    ) => {\r\n      const targetIndex = list.findIndex((item: Todos) => item.id === id);\r\n      list[targetIndex].text = text;\r\n      localStorage.setItem(\"todo\", JSON.stringify(list));\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectTodoList = createSelector(\r\n  (state: TodoList) => state.list,\r\n  (list: Todos[]) => list\r\n);\r\n\r\nexport const actions = {\r\n  addTodos,\r\n  toggleTodos,\r\n  removeTodos,\r\n  editTodos,\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  todos: todoSlice.reducer,\r\n});\r\n\r\nconsole.log(todoSlice);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","/** @jsx jsx */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport Todolist from \"./Todolist\";\r\nimport TodoInsert from \"./TodoInsert\";\r\nimport TodoHeader from \"./TodoHeader\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\nimport { debounce } from \"lodash\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTodoList, actions, RootState, Todos } from \"../features\";\r\n\r\ninterface TodoProps {\r\n  isDark: boolean;\r\n  setDark: (value: boolean) => void; // setDark: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Todo: React.FC<TodoProps> = ({ isDark, setDark }) => {\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector<RootState, Todos[]>((state) =>\r\n    selectTodoList(state.todos)\r\n  );\r\n  const [todoInput, setTodoInput] = useState<string>(\"\");\r\n  const [todo, setTodo] = useState<Todos[]>([]);\r\n  const [keyword, setKeyword] = useState<string>(\"\");\r\n  const [footerHeight, setFooterHeight] = useState<number>(0);\r\n\r\n  const theme = useTheme() as any;\r\n  const size = useWindowSize() as any;\r\n\r\n  useEffect(() => {\r\n    setTodo(todoList);\r\n  }, [todoList]);\r\n\r\n  useEffect(() => {\r\n    const containerDiv = document.getElementById(\"container\")?.clientHeight;\r\n    setFooterHeight(containerDiv as any);\r\n  }, []);\r\n\r\n  const darkModeHandler = () => {\r\n    setDark(!isDark);\r\n  };\r\n\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setTodoInput(e.target.value);\r\n  };\r\n\r\n  const onSubmitHandler = useCallback(\r\n    (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if (!todoInput) {\r\n        alert(\"할 일을 입력해주세요\");\r\n        return;\r\n      }\r\n      dispatch(actions.addTodos({ text: todoInput, checked: false }));\r\n      setTodoInput(\"\");\r\n    },\r\n    [dispatch, todoInput]\r\n  );\r\n\r\n  const onDeleteHandler = useCallback(\r\n    (todoId: string): void => {\r\n      dispatch(actions.removeTodos({ id: todoId }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onCheckToggleHandler = useCallback(\r\n    (todoId: string): void => {\r\n      dispatch(actions.toggleTodos({ id: todoId }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onEditHandler = useCallback(\r\n    (todoId: string, editedText: string): void => {\r\n      dispatch(actions.editTodos({ id: todoId, text: editedText }));\r\n      setTodoInput(\"\");\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const debounceHandler = debounce((evt) => {\r\n    setKeyword(evt);\r\n  }, 500);\r\n\r\n  const onSearchHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    debounceHandler(e.target.value);\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////\r\n\r\n  const container = css({\r\n    height: \"100%\",\r\n    backgroundColor: `${theme.background}`,\r\n    color: `${theme.text}`,\r\n    textAlign: \"center\",\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color, background-color\",\r\n  });\r\n\r\n  const wrapper = css({\r\n    maxWidth: 540,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    \"@media(min-width: 280px)\": {\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n    },\r\n  });\r\n\r\n  const content = css({\r\n    overflowY: \"auto\",\r\n    height: 520,\r\n    marginBottom: 40,\r\n  });\r\n\r\n  const footer = css({\r\n    padding: 5,\r\n    width: 90,\r\n    backgroundColor: `${theme.buttonBg}`,\r\n    color: `${theme.text}`,\r\n    border: `1px solid ${theme.buttonBorder}`,\r\n    borderRadius: 4,\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color, background-color\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: `${theme.buttonBgHover}`,\r\n      color: `${theme.buttonTextHover}`,\r\n    },\r\n    \"@media(min-width: 280px)\": {\r\n      marginBottom: 40,\r\n    },\r\n    \"@media(min-width: 768px)\": {\r\n      marginBottom: size.height - footerHeight,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div id=\"container\" css={container}>\r\n      <div css={wrapper}>\r\n        <TodoHeader todo={todo} onSearchHandler={onSearchHandler} />\r\n        <TodoInsert\r\n          onSubmitHandler={onSubmitHandler}\r\n          onChangeInput={onChangeInput}\r\n          todoInput={todoInput}\r\n        />\r\n        <div css={content}>\r\n          <Todolist\r\n            todo={todo.filter((todos) => todos.text.indexOf(keyword) > -1)}\r\n            onDeleteHandler={onDeleteHandler}\r\n            onCheckToggleHandler={onCheckToggleHandler}\r\n            onEditHandler={onEditHandler}\r\n          />\r\n        </div>\r\n        <button css={footer} onClick={darkModeHandler}>\r\n          {isDark ? \"light mode\" : \"dark mode\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","/** @jsx jsx */\nimport React, { useState } from \"react\";\nimport Todo from \"./todolist/Todo\";\nimport \"./App.css\";\nimport { jsx, ThemeProvider } from \"@emotion/react\";\nimport BullsAndCows from \"./bullsAndCows/BullsAndCows\";\n\nconst themeLight = {\n  text: \"#000\",\n  inputText: \"#000\",\n  inputBorder: \"#000\",\n  inputBackgroundColor: \"#fff\",\n  background: \"#fff\",\n  buttonText: \"000\",\n  buttonTextHover: \"#fff\",\n  buttonBorder: \"#000\",\n  buttonBg: \"rgba(0, 0, 0, 0)\",\n  buttonBgHover: \"rgba(0, 0, 0, 0.7)\",\n  nthBg: \"#f2f2f2\",\n  headerMainTitleText: \"#6200EE\", \n  headerSubTitleText: \"#018786\",\n  headerContentText: \"B00020\",\n};\n\nconst themeDark = {\n  text: \"#fff\",\n  inputText: \"#fff\",\n  inputBorder: \"#fff\",\n  inputBackgroundColor: \"#000\",\n  background: \"#121212\",\n  buttonText: \"fff\",\n  buttonTextHover: \"#000\",\n  buttonBorder: \"#fff\",\n  buttonBg: \"rgba(48, 48, 47, 1)\",\n  buttonBgHover: \"rgba(255, 255, 255, 1)\",\n  nthBg: \"#30302f\",\n  headerMainTitleText: \"#BB86FC\",\n  headerSubTitleText: \"#03DAC6\",\n  headerContentText: \"CF6679\",\n};\n\nconst App: React.FC = () => {\n  const [isDark, setDark] = useState(false);\n\n  return (\n    <ThemeProvider theme={isDark ? themeDark : themeLight}>\n      <Todo isDark={isDark} setDark={setDark} />\n    </ThemeProvider>\n    // <BullsAndCows />\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./features/index\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}