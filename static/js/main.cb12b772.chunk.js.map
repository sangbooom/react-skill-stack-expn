{"version":3,"sources":["todolist/TodolistItem.tsx","todolist/Todolist.tsx","todolist/TodoInsert.tsx","todolist/TodoHeader.tsx","features/index.tsx","todolist/Todo.tsx","hooks/useWindowSize.tsx","App.tsx","index.tsx"],"names":["React","memo","todos","onDeleteHandler","onCheckToggleHandler","onEditHandler","style","useState","toggle","setToggle","text","edit","setEdit","theme","useTheme","content_wrapper","css","display","flexDirection","justifyContent","alignItems","padding","border","borderRadius","backgroundColor","nthBg","content__input__change_false","color","inputText","inputBorder","inputBackgroundColor","content__button__change_false","width","height","boxSizing","background","marginRight","onClick","id","checked","Fragment","content__button__change_true","content__text__change_true","onChange","e","target","value","content__button__toggle","todoId","textDecoration","marginLeft","todo","rowRenderer","useCallback","index","key","rowCount","length","rowHeight","list","outline","onSubmitHandler","todoInput","onChangeInput","content__button_confirm","buttonBg","buttonBorder","transitionDuration","transitionProperty","cursor","buttonBgHover","buttonTextHover","content_wrapper__form","marginBottom","content_wrapper__input","paddingLeft","fontSize","onSubmit","onSearchHandler","undoneTasks","filter","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","header__main_title","headerMainTitleText","textAlign","header__sub_title","headerSubTitleText","header__content","header__input","placeholder","combineReducers","todosReducer","initialState","data","i","push","dummyData","addTodos","createAction","toggleTodos","removeTodos","editTodos","todoSlice","createSlice","name","reducers","add","payload","newTodo","Math","random","toString","substring","trim","unshift","localStorage","setItem","JSON","stringify","targetIndex","findIndex","item","remove","splice","selectTodoList","createSelector","state","actions","rootReducer","reducer","console","log","Todo","isDark","setDark","dispatch","useDispatch","todoList","useSelector","setTodoInput","setTodo","keyword","setKeyword","footerHeight","setFooterHeight","size","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","containerDiv","document","getElementById","clientHeight","preventDefault","alert","editedText","debounceHandler","debounce","evt","container","wrapper","maxWidth","paddingRight","content","overflowY","footer","indexOf","themeLight","buttonText","headerContentText","themeDark","App","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cb12b772.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\nimport { Todos } from \"../features\";\r\n\r\n// interface Todo {\r\n//   id: string;\r\n//   text: string;\r\n//   checked: Boolean;\r\n// }\r\ninterface TodolistItemProps {\r\n  todos: Todos;\r\n  onDeleteHandler(todoId: string): void;\r\n  onCheckToggleHandler(todoId: string): void;\r\n  onEditHandler(todoId: string, editedText: string): void;\r\n  style: any;\r\n}\r\n\r\nconst TodolistItem: React.FC<TodolistItemProps> = ({\r\n  todos,\r\n  onDeleteHandler,\r\n  onCheckToggleHandler,\r\n  onEditHandler,\r\n  style,\r\n}) => {\r\n  const [toggle, setToggle] = useState<boolean>(true);\r\n  const [edit, setEdit] = useState<string>(todos.text);\r\n\r\n  const onToggleHandler = (todoId: string) => {\r\n    if (!toggle && todos.text !== edit) {\r\n      onEditHandler(todoId, edit);\r\n    }\r\n    setToggle(!toggle);\r\n  };\r\n\r\n  const onChangeText = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEdit(e.target.value);\r\n  };\r\n\r\n  const onChangeHandler = () => {\r\n    if (!toggle) {\r\n      return;\r\n    }\r\n    onCheckToggleHandler(todos.id);\r\n  };\r\n\r\n  const theme = useTheme() as any;\r\n\r\n  const content_wrapper = css({\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    border: \"0.3px solid #e6e6e6\",\r\n    borderRadius: 10,\r\n    \"& div\": {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n    },\r\n    \"&:nth-of-type(2n)\": {\r\n      backgroundColor: `${theme.nthBg}`,\r\n    },\r\n  });\r\n\r\n  const content__input__change_false = css({\r\n    color: `${theme.inputText}`,\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.inputBackgroundColor}`,\r\n  });\r\n\r\n  const content__button__change_false = css({\r\n    width: 20,\r\n    height: 20,\r\n    boxSizing: \"border-box\",\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.background}`,\r\n    marginRight: 10,\r\n  });\r\n\r\n  return (\r\n    <div css={content_wrapper} style={style}>\r\n      <div onClick={onChangeHandler}>\r\n        {todos.checked && toggle ? (\r\n          <React.Fragment>\r\n            <div css={content__button__change_true} />\r\n            <div css={content__text__change_true}>{todos.text}</div>\r\n          </React.Fragment>\r\n        ) : toggle ? (\r\n          <React.Fragment>\r\n            <div css={content__button__change_false} />\r\n            {todos.text}\r\n          </React.Fragment>\r\n        ) : (\r\n          <input\r\n            css={content__input__change_false}\r\n            onChange={onChangeText}\r\n            value={edit}\r\n          />\r\n        )}\r\n      </div>\r\n      <div css={content__button__toggle}>\r\n        <div onClick={() => onToggleHandler(todos.id)}>\r\n          {toggle ? \"수정\" : \"적용\"}\r\n        </div>\r\n        <div onClick={() => onDeleteHandler(todos.id)}>삭제</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodolistItem);\r\n\r\nconst content__button__change_true = css({\r\n  width: 20,\r\n  height: 20,\r\n  backgroundColor: \"#03DAC5\",\r\n});\r\n\r\nconst content__text__change_true = css({\r\n  textDecoration: \"line-through\",\r\n  marginLeft: 10,\r\n});\r\n\r\nconst content__button__toggle = css({\r\n  \"& div\": {\r\n    marginRight: 20,\r\n  },\r\n});\r\n","/** @jsx jsx */\r\nimport React, { useCallback } from \"react\";\r\nimport TodolistItem from \"./TodolistItem\";\r\nimport { jsx } from \"@emotion/react\";\r\nimport { Todos } from \"../features\";\r\nimport { List } from \"react-virtualized\";\r\n\r\ninterface TodolistProps {\r\n  todo: Todos[];\r\n  onDeleteHandler(todoId: string): void;\r\n  onCheckToggleHandler(todoId: string): void;\r\n  onEditHandler(todoId: string, editedText: string): void;\r\n}\r\n\r\nconst Todolist: React.FC<TodolistProps> = ({\r\n  todo,\r\n  onDeleteHandler,\r\n  onCheckToggleHandler,\r\n  onEditHandler,\r\n}) => {\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, style }) => {\r\n      const todos = todo[index];\r\n      return (\r\n        <TodolistItem\r\n          key={key}\r\n          todos={todos}\r\n          onDeleteHandler={onDeleteHandler}\r\n          onCheckToggleHandler={onCheckToggleHandler}\r\n          onEditHandler={onEditHandler}\r\n          style={style}\r\n        />\r\n      );\r\n    },\r\n    [todo, onDeleteHandler, onCheckToggleHandler, onEditHandler]\r\n  );\r\n\r\n  return (\r\n    <List\r\n      width={520}\r\n      height={520}\r\n      rowCount={todo.length}\r\n      rowHeight={65}\r\n      rowRenderer={rowRenderer}\r\n      list={todo}\r\n      style={{ outline: \"none\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(Todolist);\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\n\r\ninterface TodoInsertProps {\r\n  onSubmitHandler(e: any): void;\r\n  onChangeInput(e: any): void;\r\n  todoInput: string;\r\n}\r\n\r\nconst TodoInsert: React.FC<TodoInsertProps> = ({\r\n  onSubmitHandler,\r\n  todoInput,\r\n  onChangeInput,\r\n}) => {\r\n  const theme = useTheme() as any;\r\n  \r\n  const content__button_confirm = css({\r\n    width: 70,\r\n    backgroundColor: `${theme.buttonBg}`,\r\n    color: `${theme.text}`,\r\n    border: `1px solid ${theme.buttonBorder}`,\r\n    borderRadius: 4,\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color, background-color\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: `${theme.buttonBgHover}`,\r\n      color: `${theme.buttonTextHover}`,\r\n    },\r\n  });\r\n\r\n  const content_wrapper__form = css({\r\n    display: \"flex\",\r\n    marginBottom: 20,\r\n  });\r\n\r\n  const content_wrapper__input = css({\r\n    color: `${theme.inputText}`,\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.inputBackgroundColor}`,\r\n    width: '100%',\r\n    height: 40,\r\n    paddingLeft: 10,\r\n    fontSize: 20,\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} css={content_wrapper__form}>\r\n      <input\r\n        css={content_wrapper__input}\r\n        onChange={onChangeInput}\r\n        value={todoInput}\r\n      />\r\n      <button css={content__button_confirm}>추가</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoInsert);\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\nimport { Todos } from \"../features\";\r\n// interface Todo {\r\n//   id: string;\r\n//   text: String;\r\n//   checked: Boolean;\r\n// }\r\ninterface TodoHeaderProps {\r\n  todo: Todos[];\r\n  onSearchHandler(e: any): void;\r\n}\r\n\r\nconst TodoHeader: React.FC<TodoHeaderProps> = ({ todo, onSearchHandler }) => {\r\n  const undoneTasks = todo.filter((todos) => !todos.checked);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n  const dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\r\n\r\n  const theme = useTheme() as any;\r\n\r\n  const header__main_title = css({\r\n    color: `${theme.headerMainTitleText}`,\r\n    fontSize: 50,\r\n    textAlign: \"center\",\r\n    \"@media(min-width: 280px)\": {\r\n      fontSize: 30,\r\n    },\r\n    \"@media(min-width: 480px)\": {\r\n      fontSize: 40,\r\n    },\r\n    \"@media(min-width: 768px)\": {\r\n      fontSize: 50,\r\n    },\r\n  });\r\n\r\n  const header__sub_title = css({\r\n    color: `${theme.headerSubTitleText}`,\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color\",\r\n    \"@media(min-width: 280px)\": {\r\n      fontSize: 18,\r\n    },\r\n    \"@media(min-width: 480px)\": {\r\n      fontSize: 24,\r\n    },\r\n    \"@media(min-width: 768px)\": {\r\n      fontSize: 28,\r\n    },\r\n  });\r\n\r\n  const header__content = css({\r\n    color: \"#CF6679\",\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color\",\r\n  });\r\n\r\n  const header__input = css({\r\n    fontSize: 20,\r\n    width: \"100%\",\r\n    height: 40,\r\n    paddingLeft: 10,\r\n    marginBottom: \"0.5rem\",\r\n    color: `${theme.inputText}`,\r\n    border: `1px solid ${theme.inputBorder}`,\r\n    backgroundColor: `${theme.inputBackgroundColor}`,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div css={header__main_title}>TO-DO-LIST</div>\r\n      <h1 css={header__sub_title}>\r\n        {dateString} {dayName}\r\n      </h1>\r\n      <input\r\n        css={header__input}\r\n        onChange={onSearchHandler}\r\n        placeholder=\"할일 검색하기\"\r\n      />\r\n      <h2 css={header__content}>할 일 {undoneTasks.length}개 남음</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoHeader);\r\n","import todosReducer from \"../todolist/Todo\";\r\nimport {\r\n  combineReducers,\r\n  createAction,\r\n  createSelector,\r\n  createSlice,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nexport default combineReducers({\r\n  todos: todosReducer,\r\n});\r\n\r\nexport interface Todos {\r\n  id: string;\r\n  text: string;\r\n  checked: boolean;\r\n}\r\n\r\ninterface TodoList {\r\n  list: Todos[];\r\n}\r\n\r\nfunction dummyData() {\r\n  const data = [];\r\n  for(let i=0; i<1000; i++){\r\n    data.push({id: `${i}`, text: `${i}`, checked: false});\r\n  }\r\n  return data;\r\n}\r\n\r\nconst initialState: TodoList = {\r\n  // list: JSON.parse(localStorage.getItem(\"todo\")!) || [], // Non-null assertion operator, ! 는 앞의 값이 확실히 null이나 undefined가 아니라는 걸 알리려고 할 때 쓴다.,\r\n  list: dummyData(),\r\n};\r\nconst actionPrefix = \"TODOS\";\r\n\r\nconst addTodos = createAction<object>(`${actionPrefix}/add`);\r\nconst toggleTodos = createAction<object>(`${actionPrefix}/toggle`);\r\nconst removeTodos = createAction<object>(`${actionPrefix}/remove`);\r\nconst editTodos = createAction<object>(`${actionPrefix}/edit`);\r\n\r\nconst todoSlice = createSlice({\r\n  name: actionPrefix,\r\n  initialState,\r\n  reducers: {\r\n    add: ({ list }: TodoList, { payload: { text } }: PayloadAction<Todos>) => {\r\n      const newTodo: Todos = {\r\n        id: Math.random().toString(36).substring(2, 13),\r\n        text: text.toString().trim(),\r\n        checked: false,\r\n      };\r\n      list.unshift(newTodo);\r\n      localStorage.setItem(\"todo\", JSON.stringify(list));\r\n    },\r\n    toggle: ({ list }: TodoList, { payload: { id } }: PayloadAction<Todos>) => {\r\n      const targetIndex = list.findIndex((item: Todos) => item.id === id);\r\n      list[targetIndex].checked = !list[targetIndex].checked;\r\n      localStorage.setItem(\"todo\", JSON.stringify(list));\r\n    },\r\n    remove: ({ list }: TodoList, { payload: { id } }: PayloadAction<Todos>) => {\r\n      list.splice(\r\n        list.findIndex((todo) => todo.id === id),\r\n        1\r\n      );\r\n      localStorage.setItem(\r\n        \"todo\",\r\n        JSON.stringify(list.filter((item: Todos) => item.id !== id))\r\n      );\r\n    },\r\n    edit: (\r\n      { list }: TodoList,\r\n      { payload: { id, text } }: PayloadAction<Todos>\r\n    ) => {\r\n      const targetIndex = list.findIndex((item: Todos) => item.id === id);\r\n      list[targetIndex].text = text;\r\n      localStorage.setItem(\"todo\", JSON.stringify(list));\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectTodoList = createSelector(\r\n  (state: TodoList) => state.list,\r\n  (list: Todos[]) => list\r\n);\r\n\r\nexport const actions = {\r\n  addTodos,\r\n  toggleTodos,\r\n  removeTodos,\r\n  editTodos,\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  todos: todoSlice.reducer,\r\n});\r\n\r\nconsole.log(todoSlice);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","/** @jsx jsx */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport Todolist from \"./Todolist\";\r\nimport TodoInsert from \"./TodoInsert\";\r\nimport TodoHeader from \"./TodoHeader\";\r\nimport { jsx, css, useTheme } from \"@emotion/react\";\r\nimport { debounce } from \"lodash\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTodoList, actions, RootState, Todos } from \"../features\";\r\n\r\ninterface TodoProps {\r\n  isDark: boolean;\r\n  setDark: (value: boolean) => void; // setDark: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Todo: React.FC<TodoProps> = ({ isDark, setDark }) => {\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector<RootState, Todos[]>((state) =>\r\n    selectTodoList(state.todos)\r\n  );\r\n  const [todoInput, setTodoInput] = useState<string>(\"\");\r\n  const [todo, setTodo] = useState<Todos[]>([]);\r\n  const [keyword, setKeyword] = useState<string>(\"\");\r\n  const [footerHeight, setFooterHeight] = useState<number>(0);\r\n\r\n  const theme = useTheme() as any;\r\n  const size = useWindowSize() as any;\r\n\r\n  useEffect(() => {\r\n    setTodo(todoList);\r\n  }, [todoList]);\r\n\r\n  useEffect(() => {\r\n    const containerDiv = document.getElementById(\"container\")?.clientHeight;\r\n    setFooterHeight(containerDiv as any);\r\n  }, []);\r\n\r\n  const darkModeHandler = () => {\r\n    setDark(!isDark);\r\n  };\r\n\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setTodoInput(e.target.value);\r\n  };\r\n\r\n  const onSubmitHandler = useCallback(\r\n    (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if (!todoInput) {\r\n        alert(\"할 일을 입력해주세요\");\r\n        return;\r\n      }\r\n      dispatch(actions.addTodos({ text: todoInput, checked: false }));\r\n      setTodoInput(\"\");\r\n    },\r\n    [dispatch, todoInput]\r\n  );\r\n\r\n  const onDeleteHandler = useCallback(\r\n    (todoId: string): void => {\r\n      dispatch(actions.removeTodos({ id: todoId }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onCheckToggleHandler = useCallback(\r\n    (todoId: string): void => {\r\n      dispatch(actions.toggleTodos({ id: todoId }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onEditHandler = useCallback(\r\n    (todoId: string, editedText: string): void => {\r\n      dispatch(actions.editTodos({ id: todoId, text: editedText }));\r\n      setTodoInput(\"\");\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const debounceHandler = debounce((evt) => {\r\n    setKeyword(evt);\r\n  }, 500);\r\n\r\n  const onSearchHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    debounceHandler(e.target.value);\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////\r\n\r\n  const container = css({\r\n    height: \"100%\",\r\n    backgroundColor: `${theme.background}`,\r\n    color: `${theme.text}`,\r\n    textAlign: \"center\",\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color, background-color\",\r\n  });\r\n\r\n  const wrapper = css({\r\n    maxWidth: 540,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    \"@media(min-width: 280px)\": {\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n    },\r\n  });\r\n\r\n  const content = css({\r\n    overflowY: \"auto\",\r\n    height: 520,\r\n    marginBottom: 40,\r\n  });\r\n\r\n  const footer = css({\r\n    padding: 5,\r\n    width: 90,\r\n    backgroundColor: `${theme.buttonBg}`,\r\n    color: `${theme.text}`,\r\n    border: `1px solid ${theme.buttonBorder}`,\r\n    borderRadius: 4,\r\n    transitionDuration: \"0.2s\",\r\n    transitionProperty: \"color, background-color\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: `${theme.buttonBgHover}`,\r\n      color: `${theme.buttonTextHover}`,\r\n    },\r\n    \"@media(min-width: 280px)\": {\r\n      marginBottom: 40,\r\n    },\r\n    \"@media(min-width: 768px)\": {\r\n      marginBottom: size.height - footerHeight,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div id=\"container\" css={container}>\r\n      <div css={wrapper}>\r\n        <TodoHeader todo={todo} onSearchHandler={onSearchHandler} />\r\n        <TodoInsert\r\n          onSubmitHandler={onSubmitHandler}\r\n          onChangeInput={onChangeInput}\r\n          todoInput={todoInput}\r\n        />\r\n        <div css={content}>\r\n          <Todolist\r\n            todo={todo.filter((todos) => todos.text.indexOf(keyword) > -1)}\r\n            onDeleteHandler={onDeleteHandler}\r\n            onCheckToggleHandler={onCheckToggleHandler}\r\n            onEditHandler={onEditHandler}\r\n          />\r\n        </div>\r\n        <button css={footer} onClick={darkModeHandler}>\r\n          {isDark ? \"light mode\" : \"dark mode\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","/** @jsx jsx */\nimport React, { useState } from \"react\";\nimport Todo from \"./todolist/Todo\";\nimport \"./App.css\";\nimport { jsx, ThemeProvider } from \"@emotion/react\";\nimport BullsAndCows from \"./bullsAndCows/BullsAndCows\";\n\nconst themeLight = {\n  text: \"#000\",\n  inputText: \"#000\",\n  inputBorder: \"#000\",\n  inputBackgroundColor: \"#fff\",\n  background: \"#fff\",\n  buttonText: \"000\",\n  buttonTextHover: \"#fff\",\n  buttonBorder: \"#000\",\n  buttonBg: \"rgba(0, 0, 0, 0)\",\n  buttonBgHover: \"rgba(0, 0, 0, 0.7)\",\n  nthBg: \"#f2f2f2\",\n  headerMainTitleText: \"#6200EE\", \n  headerSubTitleText: \"#018786\",\n  headerContentText: \"B00020\",\n};\n\nconst themeDark = {\n  text: \"#fff\",\n  inputText: \"#fff\",\n  inputBorder: \"#fff\",\n  inputBackgroundColor: \"#000\",\n  background: \"#121212\",\n  buttonText: \"fff\",\n  buttonTextHover: \"#000\",\n  buttonBorder: \"#fff\",\n  buttonBg: \"rgba(48, 48, 47, 1)\",\n  buttonBgHover: \"rgba(255, 255, 255, 1)\",\n  nthBg: \"#30302f\",\n  headerMainTitleText: \"#BB86FC\",\n  headerSubTitleText: \"#03DAC6\",\n  headerContentText: \"CF6679\",\n};\n\nconst App: React.FC = () => {\n  const [isDark, setDark] = useState(false);\n\n  return (\n    <ThemeProvider theme={isDark ? themeDark : themeLight}>\n      <Todo isDark={isDark} setDark={setDark} />\n    </ThemeProvider>\n    // <BullsAndCows />\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./features/index\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}